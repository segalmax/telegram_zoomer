# Generated by Django 4.2.23 on 2025-07-08 19:50

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AIModelConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('provider', models.CharField(choices=[('anthropic', 'Anthropic (Claude)'), ('openai', 'OpenAI'), ('google', 'Google'), ('mistral', 'Mistral')], max_length=20)),
                ('model_id', models.CharField(max_length=200)),
                ('max_tokens', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(200000)])),
                ('temperature', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(2.0)])),
                ('thinking_budget_tokens', models.IntegerField(blank=True, null=True)),
                ('timeout_seconds', models.IntegerField(default=30)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-is_default', 'provider', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ArticleExtractionConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=200, unique=True)),
                ('language_code', models.CharField(max_length=10)),
                ('min_article_length', models.IntegerField(default=50)),
                ('timeout_seconds', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['domain'],
            },
        ),
        migrations.CreateModel(
            name='ConfigCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Config Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ConfigChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_type', models.CharField(max_length=100)),
                ('config_id', models.CharField(max_length=100)),
                ('field_name', models.CharField(max_length=100)),
                ('old_value', models.TextField(blank=True)),
                ('new_value', models.TextField(blank=True)),
                ('changed_by', models.CharField(blank=True, max_length=100)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='EnvironmentConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('environment', models.CharField(choices=[('local', 'Local Development'), ('test', 'Testing'), ('production', 'Production')], max_length=20, unique=True)),
                ('session_name_pattern', models.CharField(max_length=100)),
                ('log_level', models.CharField(choices=[('DEBUG', 'Debug'), ('INFO', 'Info'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('CRITICAL', 'Critical')], default='INFO', max_length=20)),
                ('log_format', models.CharField(default='%(asctime)s - %(name)s - %(levelname)s - %(message)s', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['environment'],
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('template_type', models.CharField(choices=[('footer', 'Footer Template'), ('link', 'Link Format'), ('error', 'Error Message'), ('success', 'Success Message'), ('log', 'Log Message')], max_length=20)),
                ('template', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('variables', models.TextField(blank=True, help_text='Available variables (comma-separated)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingLimits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('batch_timeout_seconds', models.IntegerField(default=300)),
                ('batch_message_limit', models.IntegerField(default=10)),
                ('fetch_timeout_seconds', models.IntegerField(default=60)),
                ('processing_timeout_seconds', models.IntegerField(default=180)),
                ('rate_limit_sleep_seconds', models.FloatField(default=1.0)),
                ('timeout_buffer_seconds', models.IntegerField(default=30)),
                ('environment', models.CharField(choices=[('local', 'Local Development'), ('test', 'Testing'), ('production', 'Production')], default='production', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Processing Limits',
                'ordering': ['environment', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TranslationMemoryConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('default_recall_k', models.IntegerField(default=10)),
                ('overfetch_multiplier', models.IntegerField(default=4)),
                ('recency_weight', models.FloatField(default=0.3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('embedding_model', models.CharField(default='text-embedding-ada-002', max_length=100)),
                ('embedding_timeout_seconds', models.IntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-is_active', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TranslationPrompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('prompt_type', models.CharField(choices=[('system', 'System Prompt'), ('user', 'User Prompt'), ('style', 'Style Instructions'), ('linking', 'Linking Rules'), ('anti_repetition', 'Anti-Repetition Rules')], max_length=20)),
                ('content', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.CharField(default='1.0', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['prompt_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ConfigSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200, unique=True)),
                ('value', models.TextField()),
                ('value_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON')], default='string', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('default_value', models.TextField(blank=True)),
                ('is_secret', models.BooleanField(default=False, help_text='Hide value in admin interface')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='bot_config.configcategory')),
            ],
            options={
                'ordering': ['category__order', 'category__name', 'key'],
            },
        ),
    ]
